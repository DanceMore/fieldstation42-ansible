---
- name: Create and manage appuser
  hosts: all
  #become: yes
  vars:
    app_user: appuser
    app_group: appuser
    app_home: /home/appuser
    app_shell: /bin/zsh
    omz_users:
      - name: appuser
        group: appuser
        settings: ""

  tasks:
    - name: Create application group
      ansible.builtin.group:
        name: "{{ app_group }}"
        state: present

    - name: Create application user
      ansible.builtin.user:
        name: "{{ app_user }}"
        group: "{{ app_group }}"
        home: "{{ app_home }}"
        shell: "{{ app_shell }}"
        create_home: true
        system: false
        # this is intended for a shared admin + field deployment, it is not a secure password.
        # this should be the hash of "kioskmode"
        password: "$6$0RK4PanhwgjzdXws$VlglZTDmJVx2TjdeEgYOvz8C9fukbTh1ynbvoBkkl6nxa4d5oVPRNAhFvF3iyZ2RPOIKnLpruq1PUKvORuNrL."
        state: present
        groups: audio,video,plugdev,users,netdev,dialout
        append: true

    - name: Set proper permissions on home directory
      ansible.builtin.file:
        path: "{{ app_home }}"
        owner: "{{ app_user }}"
        group: "{{ app_group }}"
        mode: "0755"
        state: directory

    - name: Set up multiple authorized keys
      ansible.posix.authorized_key:
        user: "{{ app_user }}"
        state: present
        key: "{{ item }}"
      with_file:
        - ../files/public_keys/user.key
        - ../files/public_keys/yubi.key
        - ../files/public_keys/nas.key

    - name: Create application directories
      ansible.builtin.file:
        path: "{{ item }}"
        owner: "{{ app_user }}"
        group: "{{ app_group }}"
        mode: "0755"
        state: directory
      loop:
        - "{{ app_home }}/content"

    - name: Verify user creation
      ansible.builtin.command: id {{ app_user }}
      register: user_check
      changed_when: false

    - name: Display user information
      ansible.builtin.debug:
        msg: "User {{ app_user }} created successfully: {{ user_check.stdout }}"

    - name: Clone fieldstation-remote repository
      ansible.builtin.git:
        repo: https://github.com/DanceMore/fieldstation-remote.git
        dest: "{{ app_home }}/dancemore-fieldstation-remote"
        clone: yes
        update: yes
        force: yes
      become: yes
      become_user: "{{ app_user }}"

    - name: Set proper ownership on cloned repository
      ansible.builtin.file:
        path: "{{ app_home }}/fieldstation-remote"
        owner: "{{ app_user }}"
        group: "{{ app_group }}"
        recurse: yes
        state: directory

    - name: Run ansible-role-oh-my-zsh.
      ansible.builtin.include_role:
        name: "ctorgalson.oh-my-zsh"
      vars:
        omz_user: "{{ item }}"
        omz_zsh_theme: "gentoo"
        omz_disable_auto_title: true
      with_items: "{{ omz_users }}"

    - name: Copy tilda config
      ansible.builtin.copy:
        src: ../files/tilda/
        dest: "{{ app_home }}/.config/tilda"
        owner: "{{ app_user }}"
        group: "{{ app_group }}"
        mode: "0644"

    - name: Copy startup scripts
      ansible.builtin.copy:
        src: ../files/autostart/
        dest: "{{ app_home }}/.config/autostart"
        owner: "{{ app_user }}"
        group: "{{ app_group }}"
        mode: "0644"

    - name: Copy runtime scripts
      ansible.builtin.copy:
        src: ../files/scripts/
        dest: "{{ app_home }}/scripts"
        owner: "{{ app_user }}"
        group: "{{ app_group }}"
        mode: "0755"
